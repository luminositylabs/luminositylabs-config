name: luminositylabs-config CI

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  build-codebase:
    strategy:
      matrix:
        os: [ubuntu-24.04]
        jdk_version: [8.0.462-zulu, 11.0.28-zulu, 17.0.16-zulu]
        payara_server_embedded_profile_name: [payara-server-embedded, payara-server-embedded-no-jpms]
        include:
          - os: ubuntu-24.04
            jdk_version: 8.0.462-zulu
            zulu_version: 8.88.0.19
            maven_deploy: true
            docker_build: true
            container_image_repo: luminositylabs
            container_image_name: openjdk
            container_image_tag: 8u462_zulu-alpine-8.88.0.19
        exclude:
          - jdk_version: 8.0.462-zulu
            payara_server_embedded_profile_name: payara-server-embedded
          - jdk_version: 11.0.28-zulu
            payara_server_embedded_profile_name: payara-server-embedded-no-jpms
          - jdk_version: 17.0.16-zulu
            payara_server_embedded_profile_name: payara-server-embedded-no-jpms
    name: Build on OS ${{ matrix.os }} using JDK ${{ matrix.jdk_version }}
    runs-on: ${{ matrix.os }}
    env:
      MAVEN_PROPS: -Djavadoc.path=`which javadoc`
      PROFILES: gpg,release-sign-artifacts,sonatype-central-portal-deployment,sonatype-central-snapshots
      SETTINGS: .github/settings.xml

    steps:
    - name: Checkout Source
      uses: actions/checkout@v4

    - name: Install GPG and generate test key
      run: .github/install-gpg.sh

    - name: Install SDKMAN and java environment
      run: |
        .github/install-sdkman.sh ${{ matrix.jdk_version }}
        echo "SDKMAN_DIR=${HOME}/.sdkman" >> $GITHUB_ENV

    - name: Add SDKMAN candidate environment variables
      run: |
        echo "JAVA_HOME=${SDKMAN_DIR}/candidates/java/current" >> $GITHUB_ENV

    - name: Add SDKMAN candidate paths to system path
      run: |
        echo "${JAVA_HOME}/bin" >> $GITHUB_PATH

    - name: Setup Maven repository cache
      uses: actions/cache@v4
      env:
        cache-name: m2repo
      with:
        path: ~/.m2/repository
        key: ${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ env.cache-name }}-

    - name: Log github.ref
      run: echo "${{ github.ref }}"

    - name: List Maven repositories
      run: ./mvnw -U -V -s ${{ env.SETTINGS }} -P${{ env.PROFILES }} ${{ env.MAVEN_PROPS }} dependency:list-repositories

    - name: Show Maven dependency tree
      run: ./mvnw -U -V -s ${{ env.SETTINGS }} -P${{ env.PROFILES }} ${{ env.MAVEN_PROPS }} dependency:tree

    - name: Show Maven active profiles
      run: ./mvnw -U -V -s ${{ env.SETTINGS }} -P${{ env.PROFILES }} ${{ env.MAVEN_PROPS }} help:active-profiles

    - name: Show Maven effective POM
      run: ./mvnw -U -V -s ${{ env.SETTINGS }} -P${{ env.PROFILES }} ${{ env.MAVEN_PROPS }} help:effective-pom

    - name: Maven build/test
      run: ./mvnw -U -V -s ${{ env.SETTINGS }} -P${{ env.PROFILES }} ${{ env.MAVEN_PROPS }} clean install

    - name: Maven verify with payara embedded profile
      run: ./mvnw -U -V -s ${{ env.SETTINGS }} -P${{ env.PROFILES }},${{ matrix.payara_server_embedded_profile_name }} ${{ env.MAVEN_PROPS }} verify

    - name: Maven generate site
      run: ./mvnw -U -V -s ${{ env.SETTINGS }} -P${{ env.PROFILES }} ${{ env.MAVEN_PROPS }} site site:stage

    - name: Maven deploy
      if: ${{ matrix.maven_deploy && (github.ref == 'refs/heads/jakarta_ee_8') && (github.event_name != 'pull_request')  }}
      env:
        SONATYPE_CENTRAL_PORTAL_REPO_USERNAME: ${{ secrets.SONATYPE_CENTRAL_PORTAL_REPO_USERNAME }}
        SONATYPE_CENTRAL_PORTAL_REPO_PASSWORD: ${{ secrets.SONATYPE_CENTRAL_PORTAL_REPO_PASSWORD }}
      run: ./mvnw -U -V -s ${{ env.SETTINGS }} -P${{ env.PROFILES }} ${{ env.MAVEN_PROPS }} deploy

    - name: Docker maven build
      if: ${{ matrix.docker_build }}
      env:
        CBD: /usr/src/build
        P: luminositylabs-oss
      run: docker container run --rm -i -v "$(pwd)":"${CBD}" -v ${HOME}/.gnupg:/root/.gnupg -v ${P}-${{ matrix.container_image_tag }}-mvn-repo:/root/.m2 -w "${CBD}" ${{ matrix.container_image_repo }}/${{ matrix.container_image_name }}:${{ matrix.container_image_tag }} sh -l -c "apk update && apk add -u gnupg && ./mvnw -U -V -s ${{ env.SETTINGS }} -P${{ env.PROFILES }} -Djavadoc.path=/usr/bin/javadoc dependency:list-repositories dependency:tree help:active-profiles clean install site site:stage"
